1.Show the output for the following snippet.
<? php
$capital=67;
print(“Variable capital is $capital”);
print(“Variable CaPiTaL is $CaPiTaL”);
?>

output:
Variable capital is 67 Variable CaPiTal is


2)Create a PHP program to display the division table using for-loop.
1 2 3
1 1 0.5 0.33
2 2 1 0.66
3 3 1.5 1

code: <?php
echo "  1 2 3\n";
for ($i = 1; $i <= 3; $i++) {
    echo $i . " "; 
    for ($j = 1; $j <= 3; $j++) {
        $result = $i / $j;
        echo round($result, 2) . " ";
    }
    echo "\n";
}
?>
output: 
 1 2 3
1 1 0.5 0.33 
2 2 1 0.67 
3 3 1.5 1 

4. Predict the output of the following snippet:
<?php
$animal = “antelope”; $animal_heads = 1; $animal_legs = 4;
echo“The $animal has $animal_heads head(s).”;
echo“The $animal has $animal_legs leg(s).”;
?>php

output:The antelope has 1 head(s).The antelope has 4 leg(s).

5. You are building a website where users can calculate the total cost of their purchases.
Write a PHP program that takes the price and quantity of three items from the user and
calculates the subtotal, tax (10% of the subtotal),and the total cost (subtotal + tax).
Display the results to the user.

<?php
$price1 = 100;
$qty1   = 2;

$price2 = 50;
$qty2   = 3;

$price3 = 20;
$qty3   = 5;

$subtotal = ($price1 * $qty1) + ($price2 * $qty2) + ($price3 * $qty3);
$tax = $subtotal * 0.10;
$total = $subtotal + $tax;

echo "--- Purchase Summary ---\n";
echo "Subtotal: ₹" . number_format($subtotal, 2) . "\n";
echo "Tax (10%): ₹" . number_format($tax, 2) . "\n";
echo "Total Cost: ₹" . number_format($total, 2) . "\n";
?>

output:
--- Purchase Summary ---
Subtotal: ₹450.00
Tax (10%): ₹45.00
Total Cost: ₹495.00

8. A customer visits a shop to buy a soft drink; he has two options:
Drink A cost is Rs.25 and the size of the bottle is 11.
Drink B cost is Rs.23 and its size of the bottle is 9.
Which drink should he choose to save money? Solve this problem using function deal ()

<?php
function deal() {
  $costA = 25;
  $sizeA = 11;

  $costB = 23;
  $sizeB = 9;

  $valueA = $costA / $sizeA;
  $valueB = $costB / $sizeB;

  if ($valueA < $valueB) {
    echo "Drink A is a better deal.";
  } else {
    echo "Drink B is a better deal.";
  }
}

deal();
?>

output:Drink A is a better deal.


9. Predict the output of the following snippet:
$this = “this”; $that = “that”; $the_other = 2.2000000000;
print(“$this,$not_set,$that+$the_other”);

output:this,,that+2.2


10. Develop a program to check student grades based on marks using a loop.
<?php
$marks = [85, 72, 60, 48, 30];

for ($i = 0; $i < count($marks); $i++) {
    $mark = $marks[$i];

    echo "Student " . ($i + 1) . ": Marks = $mark, Grade = ";

    if ($mark >= 80) {
        echo "A";
    } elseif ($mark >= 60) {
        echo "B";
    } elseif ($mark >= 40) {
        echo "C";
    } else {
        echo "Fail<br>";
    }
}
?>

output:
Student 1: Marks = 85, Grade = A  
Student 2: Marks = 72, Grade = B  
Student 3: Marks = 60, Grade = B  
Student 4: Marks = 48, Grade = C  
Student 5: Marks = 30, Grade = Fail

11. Develop a PHP program to show days of the week using switch cases.
<?php
$dayNumber = 3; 

switch ($dayNumber) {
    case 1:
        echo "Sunday";
        break;
    case 2:
        echo "Monday";
        break;
    case 3:
        echo "Tuesday";
        break;
    case 4:
        echo "Wednesday";
        break;
    case 5:
        echo "Thursday";
        break;
    case 6:
        echo "Friday";
        break;
    case 7:
        echo "Saturday";
        break;
    default:
        echo "Invalid day number!";
}
?>
output: tuesday

12. Write a program to check student grade based on marks:
Conditions:
If marks are 75% or more, the grade will be First Class.
If marks between 60% to 74%, grade will be second class.
If marks between 40% to 59%, grade will be third class.
If marks are less than 40%, students will be Fail.

<?php
$marks = 68; 

echo "Marks: $marks";
echo "Grade: ";

if ($marks >= 75) {
    echo "First Class";
} elseif ($marks >= 60 && $marks < 75) {
    echo "Second Class";
} elseif ($marks >= 40 && $marks < 60) {
    echo "Third Class";
} else {
    echo "Fail";
}
?>

output: Marks: 68Grade: Second Class

15. Create a PHP program to compute the sum of the digits of a number.
<?php
$number = 1234; 
$sum = 0;
while ($number > 0) {
    $digit = $number % 10;  
    $sum += $digit;         
    $number = (int)($number / 10); 
}
echo "Sum of digits is: " . $sum;
?>

output:Sum of digits is: 10

16. Write a PHP function that takes two numbers as input and returns the sum of those
numbers. Display the result on the webpage, when a button is clicked.

<?php
function addNumbers($a, $b) {
    return $a + $b;
}

$num1 = 5;
$num2 = 10;

$sum = addNumbers($num1, $num2);
echo "Sum of $num1 and $num2 is: $sum";
?>

output:
Sum of 5 and 10 is: 15

17.Examine the various control structures in php and construct a bank transaction problem
with customers deposit and withdrawal of amount.
<?php
$balance = 1000; 

$action = "withdraw"; 
$amount = 500;       
if ($action == "deposit") {
    $balance += $amount;
    echo "Deposited: ₹$amount\n";
    echo "Current Balance: ₹$balance\n";
} elseif ($action == "withdraw") {
    if ($amount > $balance) {
        echo "Insufficient Balance!\n";
    } else {
        $balance -= $amount;
        echo "Withdrew: ₹$amount\n";
    }
    echo "Current Balance: ₹$balance\n";
} else {
    echo "Invalid action.\n";
}
?>

output:Withdrew: ₹500 Current Balance: ₹500

18. IsSet() function in PHP with example.
<?php
$name = "Dharani";

if (isset($name)) {
    echo "The variable 'name' is set and has a value.";
} else {
    echo "The variable 'name' is not set.";
}

unset($name); // removes the variable

if (isset($name)) {
    echo "\nThe variable 'name' is set.";
} else {
    echo "\nThe variable 'name' is not set.";
}
?>

output:
The variable 'name' is set and has a value.
The variable 'name' is not set.

19. Examine a PHP function that accepts an array of numbers and returns the highest and
lowest values in that array. Display the results on the webpage.

<?php
function findHighLow($numbers) {
    $highest = max($numbers);
    $lowest = min($numbers);
    return array($highest, $lowest);
}

$numbers = array(10, 25, 3, 99, 56);

list($high, $low) = findHighLow($numbers);

echo "Numbers: " . implode(", ", $numbers) . "";
echo "Highest Value: $high ";
echo "Lowest Value: $low";
?>

output:
Numbers: 10, 25, 3, 99, 56Highest Value: 99 Lowest Value: 3

21. Construct a PHP function that checks if a given year is a leap year and returns true or
false accordingly.

<?php
function isLeapYear($year) {
    return ($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0);
}

$year = 2024;

if (isLeapYear($year)) {
    echo "$year is a leap year.";
} else {
    echo "$year is not a leap year.";
}
?>

output:
2024 is a leap year.

22. Create a PHP script that counts the number of occurrences of a specific word in a given
string.

<?php
$text = "PHP is easy. PHP is powerful. I love PHP!";
$word = "PHP";

$count = substr_count($text, $word);

echo "The word '$word' appears $count times.";
?>

output:
The word 'PHP' appears 3 times.

23. Prioritize the use of GET and POST arguments in PHP with a real time example.

<?php
// Simulating GET and POST without a form
$_GET['color'] = "Blue";
$_POST['name'] = "Dharani";

echo "GET: Your favorite color is " . $_GET['color'] . "\n";
echo "POST: Hello, " . $_POST['name'] . "!";
?>

output:
GET: Your favorite color is Blue
POST: Hello, Dharani!
    
24. Write a PHP script to manipulate the strings with all the string functions.
<?php
$str = "  Hello World! Welcome to PHP.  ";

// Remove extra spaces
$trimmed = trim($str);

// Convert to lowercase and uppercase
$lower = strtolower($trimmed);
$upper = strtoupper($trimmed);

// String length
$length = strlen($trimmed);

// Word count
$wordCount = str_word_count($trimmed);

// Replace a word
$replaced = str_replace("World", "Friend", $trimmed);

// Reverse the string
$reversed = strrev($trimmed);

// Find position of a word
$pos = strpos($trimmed, "PHP");

// Substring
$sub = substr($trimmed, 6, 5);

// Display results neatly
echo "Original: '$str'\n";
echo "Trimmed: '$trimmed'\n";
echo "Lowercase: $lower\n";
echo "Uppercase: $upper\n";
echo "Length: $length\n";
echo "Word count: $wordCount\n";
echo "Replace: $replaced\n";
echo "Reversed: $reversed\n";
echo "Position of 'PHP': $pos\n";
echo "Substring: $sub\n";
?>

output:
Original: '  Hello World! Welcome to PHP.  '
Trimmed: 'Hello World! Welcome to PHP.'
Lowercase: hello world! welcome to php.
Uppercase: HELLO WORLD! WELCOME TO PHP.
Length: 28
Word count: 5
Replace: Hello Friend! Welcome to PHP.
Reversed: .PHP ot emocleW !dlroW olleH
Position of 'PHP': 24
Substring: World


25. Construct a PHP script to replace the first ‘the’ of the following string with ‘best’. Data:
“The Thing will come to you soon”

<?php
$text = "The Thing will come to you soon";
// Replace first occurrence of "The" (case-sensitive)
$result = preg_replace('/The/', 'Best', $text, 1);

echo $result;
?>

output:
Best Thing will come to you soon

27. Articulate the mathematical operators with suitable examples in PHP.

<?php
$a = 12;
$b = 5;

echo "a = $a, b = $b\n";
echo "Addition (+): " . ($a + $b) . "\n";
echo "Subtraction (-): " . ($a - $b) . "\n";
echo "Multiplication (*): " . ($a * $b) . "\n";
echo "Division (/): " . ($a / $b) . "\n";
echo "Modulus (%): " . ($a % $b) . "\n";
echo "Exponentiation (**): " . ($a ** $b) . "\n";
?>

output:

a = 12, b = 5
Addition (+): 17
Subtraction (-): 7
Multiplication (*): 60
Division (/): 2.4
Modulus (%): 2
Exponentiation (**): 248832

28. Consider three variables $a, $b, $c, apply var_dump() function to evaluate if the values
are equal or not.

<?php
$a = 10;
$b = 10;
$c = 20;

echo "a = $a, b = $b, c = $c";

echo "a == b: ";
var_dump($a == $b);

echo "a == c: ";
var_dump($a == $c);

echo "b == c: ";
var_dump($b == $c);
?>

output:
a = 10, b = 10, c = 20a == b: bool(true)
a == c: bool(false)
b == c: bool(false)


30. Develop a PHP script that generates a random password consisting of a combination of
letters, numbers, and special characters.
<?php
$chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
$password = '';

for ($i = 0; $i < 8; $i++) {
    $password .= $chars[rand(0, strlen($chars) - 1)];
}

echo "Random Password: " . $password;
?>

output:
Random Password: ^lwN@#ve



